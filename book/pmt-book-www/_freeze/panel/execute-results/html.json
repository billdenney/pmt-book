{
  "hash": "e3dd7593fd4b991aba702c992c40a60c",
  "result": {
    "markdown": "---\ntitle: Panel\nsubtitle: Group table rows in panels.\n---\n\n## Syntax\n\nTo panel a table by `STUDY` \n\n::: {.cell}\n\n```{.r .cell-code}\nstable(stdata(), panel = \"STUDY\") \n```\n:::\n\nTo set a prefix for the panel header:\n\n::: {.cell}\n\n```{.r .cell-code}\nstable(stdata(), panel = as.panel(\"STUDY\", prefix = \"Study: \"))\n```\n:::\n\n\n## Basics\n\n\n\n\n\nPaneling your table is a way to group sets of rows together into a \"panel\" \nwith a panel header rendered in bold font. For example, we can panel a table \nof `mtcars` by `carb`.  We will be working with an abbreviated version of \n`mtcars`\n\n::: {.cell}\n\n```{.r .cell-code}\nsmcars\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n.                          name  mpg cyl  disp  hp drat    wt  qsec vs am gear\n. Datsun 710         Datsun 710 22.8   4 108.0  93 3.85 2.320 18.61  1  1    4\n. Hornet 4 Drive Hornet 4 Drive 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3\n. Valiant               Valiant 18.1   6 225.0 105 2.76 3.460 20.22  1  0    3\n. Fiat 128             Fiat 128 32.4   4  78.7  66 4.08 2.200 19.47  1  1    4\n. Toyota Corolla Toyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4\n. Toyota Corona   Toyota Corona 21.5   4 120.1  97 3.70 2.465 20.01  1  0    3\n. Fiat X1-9           Fiat X1-9 27.3   4  79.0  66 4.08 1.935 18.90  1  1    4\n. Merc 240D           Merc 240D 24.4   4 146.7  62 3.69 3.190 20.00  1  0    4\n. Merc 230             Merc 230 22.8   4 140.8  95 3.92 3.150 22.90  1  0    4\n. Honda Civic       Honda Civic 30.4   4  75.7  52 4.93 1.615 18.52  1  1    4\n.                carb\n. Datsun 710        1\n. Hornet 4 Drive    1\n. Valiant           1\n. Fiat 128          1\n. Toyota Corolla    1\n. Toyota Corona     1\n. Fiat X1-9         1\n. Merc 240D         2\n. Merc 230          2\n. Honda Civic       2\n```\n:::\n:::\n\nThen we pass into `stable()` and name the paneling column\n\n::: {.cell}\n\n```{.r .cell-code}\nsmcars %>% stable(panel = \"carb\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](panel_files/figure-html/unnamed-chunk-12-1.png){width=948}\n:::\n:::\n\nNow, all of the `carb==1` rows are grouped with the heading `1` and similarly \nthe `carb==2` rows are grouped with the heading `2` in bold. \n\nThis is ok, but a more informative heading would be helpful. To do this, we'll \ncall `as.panel()` to both name the panel column and set some options\n\n::: {.cell}\n\n```{.r .cell-code}\nsmcars %>% stable(panel = as.panel(\"carb\", prefix = \"carb: \")) %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](panel_files/figure-html/unnamed-chunk-14-1.png){width=948}\n:::\n:::\n\nNote that the prefix is completely specified by the user (including any spaces\nor a colon.\n\n\n## panel: additional customization \n\nSee the `?rowpanel` help topic for arguments to `rowpanel()` that can be passed\nto customize the panel.  Some of the customizations include\n\n1. add a prefix to the panel title\n1. skip making panels for certain data in the panel column\n1. make the panel title bold\n1. make the panel title italics\n1. opt out from drawing `hline` above panels\n1. jut the panel titles so that the rows under the panel header are indented\n   (available starting with version 0.4.1)\n\n\\clearpage\n\n### `jut`\n\nWe recommend an value more than 1, otherwise the table looks mis-aligned rather\nthan creating offset between panel row and underlying data.\n\n::: {.cell}\n\n```{.r .cell-code}\nstable(\n  stdata(), \n  panel = as.panel(\"STUDY\", jut = 1)\n) %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](panel_files/figure-html/unnamed-chunk-16-1.png){width=948}\n:::\n:::\n\nThis feature requires pmtables 0.4.1 or greater.\n\n\\clearpage\n\n## panel: important points\n\n1. Most of the time, the data frame should be sorted by the `panel` column\n1. pmtables creates panels by non-repeating values in the panel column; there \n   will be an error if duplicate panel names are found and this can be \n   overridden by passing `duplicates_ok` to `as.panel()`.  \n\n\n\\clearpage",
    "supporting": [
      "panel_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}