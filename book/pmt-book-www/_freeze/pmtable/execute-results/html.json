{
  "hash": "00c0d601ffe6dbdef00fb1cf65605112",
  "result": {
    "markdown": "---\ntitle: pmtable\nsubtitle: > \n  Standardized data summaries, rendered as a table.\n---\n\n\n\n\n__Some setup__\n\n::: {.cell}\n\n```{.r .cell-code}\nunits = yspec::ys_get_unit(yspec::ys_help$spec(), parens = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- pmt_first\ndata_pk <- pmt_pk\ndata_all <- pmt_obs\n```\n:::\n\n## Principles\n\nThese functions expect that the user passes in all data that is to be summarized\nand nothing more.  We will not filter your data. \n\n\n## Rename cols\n\nWhen you select columns to summarize, you can generally pass in alternate \n(nicer) names that you want to show up in the table.  For example, if I have \na column called `WT` in the data frame and I want it to show up as `Weight`\nthis can be accomplished during the call\n\n::: {.cell}\n\n```{.r .cell-code}\npt_cont_wide(data, cols = c(Weight = \"WT\")) %>% \n  stable(notes = NULL) %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-8-1.png){width=948}\n:::\n:::\n\nAlternatively, you can use the `table` argument to enter rename info. Note that\n`table` is a list that should have names that match up with columns in the data\nframe and values that are the new names\n\n::: {.cell}\n\n```{.r .cell-code}\ntab <- list(SEXf = \"Sex\", ASIANf = \"Race group\")\n\npt_cat_wide(data, cols = \"SEXf,ASIANf\", table = tab) %>% \n  stable() %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-10-1.png){width=948}\n:::\n:::\n\n\n## Data inventory tables\n\n- Count number of\n  - individuals\n  - observations\n  - BQL observations\n  - missing values\n- Calculate the percent  of observations or BQL in different sub groups\n\n\n\\clearpage\n\n### Stacked by endpoint\n\n- The stacked plot creates multiple independent tables to summarize different\nendpoints; there is no single overall summary for the table because we\nare summarizing different endpoints\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_data_inventory(\n  data_all,\n  by = c(Study = \"STUDYf\"),\n  panel = as.panel(\"SEQf\", prefix = \"Endpoint: \"),\n  stacked = TRUE\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-12-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### Paneled\n\n- Just summarize a single endpoint\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_data_inventory(\n  data_pk,\n  by = c(Study = \"STUDYf\"),\n  panel = \"ASIANf\"\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-14-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### Grouped (by study)\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_data_inventory(\n  data_pk,\n  by = c(Study = \"STUDYf\")\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-16-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### BQL / BLQ\n\nBeginning with version 0.4.1, pmtables can accommodate either `BQL`\nor `BLQ` as the name of the column indicating that observations were below\nthe limit of quantitation. Table notes and output column headers will be adjusted\nbased on the input. \n\nFor example\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_ql <- pmt_obs\ndata_lq <- dplyr::rename(pmt_obs, BLQ = BQL) \n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\npt_data_inventory(data_ql, by = \"STUDYf\") %>% \n  stable() %>%\n  st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-20-1.png){width=948}\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\npt_data_inventory(data_lq, by = \"STUDYf\") %>% \n  stable() %>%\n  st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-22-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n\n## Wide categorical table\n\n- Summary of categorical data in wide format\n- The summary is `number (percent within group)`\n- Wide refers to the fact that the covariates go across the table\n\n\n#### Ungrouped\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cat_wide(\n  data = data,\n  cols = vars(Formulation = FORMf, Sex = SEXf, \"Race group\" = ASIANf)\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-24-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### Paneled (limited utility, IMO)\n\n- Provided here for completeness\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cat_wide(\n  data = data,\n  cols = vars(Formulation = FORMf, Sex = SEXf, \"Race group\" = ASIANf),\n  panel = as.panel(\"STUDYf\", prefix = \"Study: \")\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-26-1.png){width=948}\n:::\n:::\n\n\n\n\\clearpage\n\n### Grouped (by male / female)\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cat_wide(\n  data = data,\n  by = c(Sex = \"SEXf\"),\n  cols = vars(Formulation = FORMf, \"Race group\" = ASIANf)\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-28-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### Paneled and grouped\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cat_wide(\n  data = data,\n  cols = vars(Formulation = FORMf, Sex = SEXf,\"Race group\" = ASIANf),\n  panel = as.panel(\"STUDYf\", prefix = \"Study: \"),\n  by = c(\"RF Group\" = \"RFf\")\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-30-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### No summary\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cat_wide(\n  data = data,\n  summarize = \"none\",\n  cols = vars(Formulation = FORMf, Sex = SEXf,\"Race group\" = ASIANf),\n  panel = as.panel(\"STUDYf\", prefix = \"Study: \"),\n  by = c(\"RF Group\" = \"RFf\")\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-32-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n\n## Long categorical table\n\n- Categorical table in long format\n- Long indicates that the covariates go down the table\n\n### Ungrouped\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cat_long(\n  data = data,\n  cols = vars(Study = STUDYf, Sex = SEXf, \"Race group\" = ASIANf, \"Child-Pugh\" = CPf)\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/ungrouped-long-categorical-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### Grouped (by formulation)\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cat_long(\n  data = data,\n  cols = vars(Study = STUDYf,Sex = SEXf,\"Race group\" = ASIANf, \"Child-Pugh\" = CPf),\n  span = c(Formulation = \"FORMf\")\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-34-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### Summary on bottom and right\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cat_long(\n  data = data,\n  summarize = \"both\",\n  cols = vars(Formulation = FORMf, Sex = SEXf,\"Race group\" = ASIANf),\n  span = vars(Study = STUDYf)\n  )\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-36-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### No summary\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cat_long(\n  data = data,\n  summarize = \"none\",\n  cols = vars(Formulation = FORMf, Sex = SEXf,\"Race group\" = ASIANf),\n  span = vars(Study = STUDYf)\n  )\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-38-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n\n\n## Wide continuous table\n\n- Continuous table in wide format\n- Wide means that the covariates go across the table\n\n\n### Ungrouped\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cont_wide(\n  data = data,\n  cols = \"WT,SCR,AGE,ALB,HT\",\n  units = units\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-40-1.png){width=948}\n:::\n:::\n\n\n\\clearpage \n\n### Paneled\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cont_wide(\n  data = data,\n  cols = \"WT,SCR,AGE,ALB,HT\",\n  panel = c(Study = \"STUDYf\"),\n  units = units\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-42-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### Grouped (by study)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cont_wide(\n  data = data,\n  cols = \"WT,SCR,AGE,ALB,HT\",\n  by = c(Study = \"STUDYf\"),\n  units = units\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-44-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### Paneled and grouped\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cont_wide(\n  data = data,\n  cols = \"WT,SCR,AGE,ALB,HT\",\n  by = c(Study = \"STUDYf\"),\n  panel = c(Formulation = \"FORMf\"),\n  units = units\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-46-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n\n## Long continuous table\n\n- Continuous summary table in long format\n- Long indicates that covariates go down the table\n\n\n### Ungrouped\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cont_long(\n  data = data,\n  cols = \"WT,SCR,AGE\",\n  units = units\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-48-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### Paneled\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- pt_cont_long(\n  data = data,\n  cols = \"WT,SCR,AGE\",\n  panel = vars(Study = STUDYf),\n  units = units\n)\n\nout %>% stable(r_file = \"test.R\", output_file = \"test.tex\") %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-50-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n## Demographics table\n\nA demographics table summarizes both continuous and discrete data in a single \ntable. \n\n- Both continuous columns (`cols_cont`) and discrete (`cols_cat`) are required\n- You can specify a `span` column (the table is pretty skinny without that)\n- You can opt out of the paneling too with `paneled` argument (the also makes \n  the table wider\n- An `All data` summary is provided on the left (opt out with `summarize_all`)\n\n### With span\n\n\n::: {.cell}\n\n```{.r .cell-code}\npt_demographics(\n  pmt_first, \n  cols_cont = \"WT, CRCL\", \n  cols_cat = \"SEXf, CPf\", \n  span = c(Study = \"STUDYf\")\n) %>% stable() %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-52-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n\n### No span\n\n- This table is skinny\n\n::: {.cell}\n\n```{.r .cell-code}\nmini <- noteconf(type = \"minipage\", width = 0.5)\npt_demographics(\n  pmt_first, \n  cols_cont = \"WT, CRCL, AGE\", \n  cols_cat = \"SEXf, CPf\"\n) %>% stable(note_config = mini) %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-54-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n### No span, not paneled\n\n- Opting out of the paneling also makes it wider\n\n::: {.cell}\n\n```{.r .cell-code}\npt_demographics(\n  pmt_first, \n  cols_cont = \"WT, CRCL, AGE\", \n  cols_cat = \"SEXf, CPf\", \n  paneled = FALSE, \n  table = list(WT = \"Weight (kg)\", CRCL = \"CLCR (ml/min)\", \n               AGE = \"Age (years)\", SEXf = \"Sex\", CPf = \"Child-Pugh\")\n) %>% stable() %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-56-1.png){width=948}\n:::\n:::\n\n\n\\clearpage\n\n### No summary\n\n::: {.cell}\n\n```{.r .cell-code}\npt_demographics(\n  pmt_first, \n  cols_cont = \"WT, CRCL, AGE\", \n  cols_cat = \"SEXf, CPf\", \n  span = c(Study = \"STUDYf\"),\n  summarize_all = FALSE\n) %>% stable() %>% st_as_image()\n```\n\n::: {.cell-output-display}\n![](pmtable_files/figure-html/unnamed-chunk-58-1.png){width=948}\n:::\n:::\n\n\\clearpage\n\n## Customized summary functions\n\npmtables will summarize continuous data using a built-in function, producing\nstandard summaries (e.g. mean, median, etc). Users can pass a function to \nreplace this default, allowing totally customized summaries. \n\nCustom summary functions are not currently allowed for categorical data.\n\n### Continuous long table\n\nYou can pass a custom summary function via `fun`. This function should have a\nfirst argument called `value` and should be able to absorb extra arguments \nvia `...`. The function should return a `data.frame`, with a single row\nand summaries going across in the columns.\n\nFor example, we can have `pt_cont_long()` return the geometric mean and \nvariance by passing the following function\n\n::: {.cell}\n\n```{.r .cell-code}\ncont_long_custom <- function(value, ...) {\n  value <- na.omit(value)\n  ans <- data.frame(\n    GeoMean = exp(mean(log(value))), \n    Variance = var(value)\n  )\n  mutate(ans, across(everything(), sig))\n}\n```\n:::\n\nTest the function by passing some test data\n\n::: {.cell}\n\n```{.r .cell-code}\ncont_long_custom(c(1,2,3,4,5))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  GeoMean Variance\n1    2.61     2.50\n```\n:::\n:::\n\nThen, pass this as `fun`\n\n::: {.cell}\n\n```{.r .cell-code}\npt_cont_long(\n  data = pmt_first, \n  cols = c(\"WT\", \"ALB\", \"AGE\"), \n  fun = cont_long_custom\n)$data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  Variable GeoMean Variance\n  <chr>    <chr>   <chr>   \n1 WT       69.5    165     \n2 ALB      4.11    0.629   \n3 AGE      32.5    78.0    \n```\n:::\n:::\n\nSee `pmtables:::cont_long_fun` (the default) for an example.   \n\n### Continuous wide table\n\nYou can pass a custom summary function via `fun`. This function should have a\nfirst argument called `value` and should be able to absorb extra arguments \nvia `...`. The continuous, wide table must return a `data.frame` with a single \nrow and a single column named `summary`\n\n::: {.cell}\n\n```{.r .cell-code}\ncont_wide_custom <- function(value, ...) {\n  value <- na.omit(value)\n  geo_mean <- sig(exp(mean(log(value))))\n  variance <- sig(var(value))\n  n <- length(value)\n  ans <- paste0(geo_mean, \" [\", variance, \"] (\", n, \")\")\n  data.frame(summary = ans)\n}\n```\n:::\n\nYou can test the function by passing some test data\n\n::: {.cell}\n\n```{.r .cell-code}\ncont_wide_custom(c(1, 3, 5))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          summary\n1 2.47 [4.00] (3)\n```\n:::\n:::\n\n\nThen, pass this as `fun`\n\n::: {.cell}\n\n```{.r .cell-code}\npt_cont_wide(\n  data = pmt_first, \n  cols = c(\"WT\", \"ALB\", \"AGE\"), \n  fun = cont_wide_custom\n)$data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  WT               ALB                AGE              \n  <chr>            <chr>              <chr>            \n1 69.5 [165] (157) 4.11 [0.629] (156) 32.5 [78.0] (160)\n```\n:::\n:::\n\nSee `pmtables:::cont_wide_fun` (the default) for an example.   ",
    "supporting": [
      "pmtable_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}