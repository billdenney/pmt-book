{
  "hash": "c3900d3645e7af581c681be8548de8ec",
  "result": {
    "markdown": "---\ntitle: Longtable\nsubtitle: Tables that span multiple pages.\n---\n\n\n## Syntax\n\nTo create a long table from a data frame\n\n::: {.cell}\n\n```{.r .cell-code}\nstable_long(stdata())\n```\n:::\n\nTo create a long table from pipeline\n\n::: {.cell}\n\n```{.r .cell-code}\nst_new(data) %>% stable_long()\n```\n:::\n\nTo create a long table from `pmtable`\n\n::: {.cell}\n\n```{.r .cell-code}\npt_cont_long(data, cols = \"WT,EGFR\") %>% stable_long()\n```\n:::\n\n\n## Basics\n\nYou can create `longtables` that span multiple pages of your pdf document.\nTables using the`longtable` environment are very different than the the \nbasic table from `stable()` which are built using tabular environment.\n\n\n## Inserting longtable into your latex document\n\nOnce you have written your long table out to a file, you can source it into \nyour latex document with a simple input command\n\n::: {.cell}\n\n```{.txt .cell-code}\n\\input{my-table.tex}\n```\n:::\n\n*IMPORTANT*  \n\n- Do not wrap the input in `\\begin{table}` / `\\end{table}`; the table\nwill not show up properly that way\n- Do not include any `\\caption{...}` statement; the caption must be\nprovided in a special way (see below)\n\n## Writing a caption\n\nLongtable is different than regular tabular table in that the caption \n(and label) need to be included in the longtable environment.  This means\nthat you have to enter this information **when you create the table**.\n\n\n### Method 1: in the R script\n\n`stable_long()` has an argument called `lt_cap_text` that will allow you\nto provide the text for the caption. This text must be passed to the\n`stable_long()` call (or `st_make()`)\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- stable_long(data, lt_cap_text = \"A long table (example 3)\")\n```\n:::\n\nYou will see in the TeX code that a caption is included in the longtable\nenvironment.\n\n\n### Method 2: as a TeX macro\n\nRather than passing the text for the caption, you can name a macro that\nshould (will) be defined at the time the table is rendered in the TeX\ndocument.\n\nUse the `lt_cap_macro` argument:\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- stable_long(data, lt_cap_macro = \"ltexfourcap\")\n```\n:::\n\nNow, there is a call to that macro in the table and you **must** define that \nmacro prior to sourcing in your tex document.\n\n::: {.cell}\n\n```{.txt .cell-code}\n\\newcommand{\\ltexfourcap}{\n  Another long table - example 4  \n}\n\n\\input{example4.tex}\n```\n:::\n\n## Add a label\n\nTo add a label, pass in a caption (either as text or as a macro) and\nthen use the `lt_cap_label` argument:\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>% \n  stable_long(lt_cap_label = \"tab:example\", lt_cap_macro = \"example\") \n```\n:::\n\n## Include a longtable in an Rmd document\n\nIf you want to dump a table into an R markdown document, pass it to\n`st_asis()`. There is a method for `stable_long()` and it will wrap the\ntable properly.\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- stable_long(data) %>% st_as_image()\n```\n:::\n\n## Page breaks\n\nStarting with version 0.4.1, pmtables will modify longtables so that panel \nheaders are kept on the same page as the first row of data underneath the \npanel row. ",
    "supporting": [
      "longtable_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}